{
  "hash": "4e3012425654b06f3b1a80bbb58d1974",
  "result": {
    "markdown": "---\ntitle: \"ML Model Comparison for Marine Fish Extinction Risk\"\nauthor:\n  - name: Elke Windschitl\n    url: https://elkewind.github.io\ndescription: \"Evaluating machine learning algorithms for predicting fish IUCN status\"\nimage: \"Tuna.jpg\"\ndate: 2023-10-17\ncategories: [Machine Learning, R]\ncitation: \n  url: https://elkewind.github.io/posts/2023-10-17-ml-model-comparison\ntoc: true\ndraft: false\npage-layout: full\n---\n\n\n\n\nDescription: In this qmd, I evaluate different supervised machine learning algorithms for predicting IUCN Red List status of fish based on ecological and morphological characteristics. These characteristics were retrieved from FishBase and joined with the IUCN data in a separate script.\n\n## Introduction\n\nGlobal human activity threatens many species with extinction. According to the International Union and Conservation of Nature (IUCN), “More than 41,000 species are threatened with extinction. That is still 28% of all assessed species.”^1^. Increased extinction and loss of biodiversity can have severe ecological, economic, and cultural impacts. Cardinale et al.’s deep dive into biodiversity and ecosystem services research conclude that biodiversity loss reduces ecological communities’ efficiency, stability, and productivity. Decreased productivity from ecosystem services can have a negative impact on ecosystem economics^2^. Additionally, cultures worldwide have strong ties to local flora and fauna, much of which now face extinction risk. Improving understanding of extinction risk is ecologically, economically, and culturally important.\n\nThe IUCN Red List classifies species into various categories based on how vulnerable they are to extinction. The Red List also has many species that are listed as \"Data Deficient\" or \"Not Evaluated\". Filling in these data gaps is extremely important when it comes to conservation. In marine species, evaluating these populations can prove challenging. It can be helpful to build off of existing knowledge to inform where evaluation resources should be spent. Here, I propose to build various machine learning models that predict binary Red List status of saltwater fish based on their ecological and morphological traits according to FishBase. I apply the most successful model to Red List Data Deficient and Not Evaluated species. \n\nThis work builds off of my previous work [Identifying Key Traits in Hawaiian Fish that Predict Risk of Extinction](https://elkewind.github.io/posts/2022-12-02-hawaiian-fish-analysis/). However, here I am looking at all fish listed on the IUCN Red List -- not just those in Hawaii -- and I am using a Tidymodels machine learning approach.\n\n## The Data\n\nFor my analysis I use the IUCN Red List data accessed via the IUCN Red List API^1^ and package rredlist^3^. Consistent with Munstermann et al., living species listed as ‘Vulnerable’, ‘Endangered’, or ‘Critically Endangered’ were categorized as ‘Threatened’. Living species listed as ‘Least Concern’ and ‘Near Threatened’ were categorized as ‘Nonthreatened’^4^. I also chose to add 'Extinct in the Wild,' to the 'Threatened' category. Fully extinct species were not included. The IUCN Red List data are limited in that many marine species have not been listed yet or have been identified as too data deficient to be evaluated. The lack of data on elusive fish may introduce bias into the models.\n\nFish ecological data were accessed from FishBase^5^ via package rfishbase^6^. Different species in the FishBase data were originally described by different people, possibly leading to errors or biases. Measurement errors in length may be present, as there are various common ways to measure the length of a fish. The species recorded in FishBase may be biased towards fish with commercial value. Data were wrangled in R and formatted in a tidy data table with the following variables.\n\n\n::: {.cell}\n::: {.cell-output-display}\n| SpecCode|GenusSpecies             |BodyShapeI          |DemersPelag     |AirBreathing | DepthRangeShallow| DepthRangeDeep| LongevityWild| Length| Weight|Importance        |PriceCateg |MainCatchingMethod |UsedforAquaculture | GameFish|Dangerous                      |Electrogenic       | Neritic| SupraLittoralZone| Saltmarshes| LittoralZone| TidePools| Intertidal| SubLittoral| Caves| Oceanic| Epipelagic| Mesopelagic| Bathypelagic| Abyssopelagic| Hadopelagic| Estuaries| Mangroves| MarshesSwamps| CaveAnchialine| Stream| Lakes| Cave| Cave2|FeedingType                   | Parasitism| Solitary| Symbiosis| Symphorism| Commensalism| Mutualism| Epiphytic| Schooling| Shoaling| Benthic| Sessile| Mobile| Demersal| Endofauna| Pelagic| Megabenthos| Macrobenthos| Meiobenthos| SoftBottom| Sand| Coarse| Fine| Level| Sloping| Silt| Mud| Ooze| Detritus| Organic| HardBottom| Rocky| Rubble| Gravel|SexualAttributes  |SexMorphology                                     |SexColors                                |StrikingFeatures       |Forehead              | OperculumPresent|TypeofEyes          |TypeofMouth         |PosofMouth            |MandibleTeeth |MaxillaTeeth |VomerineTeeth |Palatine |PharyngealTeeth |TeethonTongue |TypeofScales                                |Scutes             | Keels|HorStripesTTI |HorStripesTTII |VerStripesTTI |VerStripesTTII     |VerStripesTTIII          |DiaStripesTTI |DiaStripesTTII |DiaStripesTTIII               |CurStripesTTI |CurStripesTTII |CurStripesTTIII |SpotsTTI           |SpotsTTII          |SpotsTTIII        |DorsalFinI                   |DorsalFinII       |CaudalFinI                   |CaudalFinII       |AnalFinI                     |AnalFinII         | LateralLinesNo| LLinterrupted| ScalesLateralmin| ScalesLateralmax| PoredScalesMin| PoredScalesMax| LatSeriesMin| LatSeriesMax| ScaleRowsAboveMin| ScaleRowsAboveMax| ScaleRowsBelowMin| ScaleRowsBelowMax| ScalesPeduncMin| ScalesPeduncMax| BarbelsNo|BarbelsType | GillCleftsNo|Spiracle | GillRakersLowMin| GillRakersLowMax| GillRakersUpMin| GillRakersUpMax| GillRakersTotalMin| GillRakersTotalMax|Vertebrae | VertebraePreanMin| VertebraePreanMax| VertebraeTotalMin| VertebraeTotalMax|DorsalAttributes                       | Dfinno| DorsalSpinesMin| DorsalSpinesMax| Notched| DorsalSoftRaysMin| DorsalSoftRaysMax|Adifin | DFinletsmin| DFinletsmax| VFinletsmin| VFinletsmax|CShape                |Attributes          | Afinno| AnalFinSpinesMin| AnalFinSpinesMax| Araymin| Araymax|PectoralAttributes  | Pspines2| Praymin| Praymax|PelvicsAttributes       |VPosition |VPosition2           | Vspines| Vraymin| Vraymax| StandardLengthCm|Forklength | Totallength| HeadLength| PreDorsalLength| PrePelvicsLength| PreAnalLength| PostHeadDepth| PostTrunkDepth| MaximumDepth| PeduncleDepth| PeduncleLength| CaudalHeight| PreorbitalLength| EyeLength|GasBladder |ReproMode |Fertilization |MatingSystem |MonogamyType | MatingQuality| SpawnAgg|Spawning                         | BatchSpawner|ParentalCare |MainCommonName           | IsOfConcern|\n|--------:|:------------------------|:-------------------|:---------------|:------------|-----------------:|--------------:|-------------:|------:|------:|:-----------------|:----------|:------------------|:------------------|--------:|:------------------------------|:------------------|-------:|-----------------:|-----------:|------------:|---------:|----------:|-----------:|-----:|-------:|----------:|-----------:|------------:|-------------:|-----------:|---------:|---------:|-------------:|--------------:|------:|-----:|----:|-----:|:-----------------------------|----------:|--------:|---------:|----------:|------------:|---------:|---------:|---------:|--------:|-------:|-------:|------:|--------:|---------:|-------:|-----------:|------------:|-----------:|----------:|----:|------:|----:|-----:|-------:|----:|---:|----:|--------:|-------:|----------:|-----:|------:|------:|:-----------------|:-------------------------------------------------|:----------------------------------------|:----------------------|:---------------------|----------------:|:-------------------|:-------------------|:---------------------|:-------------|:------------|:-------------|:--------|:---------------|:-------------|:-------------------------------------------|:------------------|-----:|:-------------|:--------------|:-------------|:------------------|:------------------------|:-------------|:--------------|:-----------------------------|:-------------|:--------------|:---------------|:------------------|:------------------|:-----------------|:----------------------------|:-----------------|:----------------------------|:-----------------|:----------------------------|:-----------------|--------------:|-------------:|----------------:|----------------:|--------------:|--------------:|------------:|------------:|-----------------:|-----------------:|-----------------:|-----------------:|---------------:|---------------:|---------:|:-----------|------------:|:--------|----------------:|----------------:|---------------:|---------------:|------------------:|------------------:|:---------|-----------------:|-----------------:|-----------------:|-----------------:|:--------------------------------------|------:|---------------:|---------------:|-------:|-----------------:|-----------------:|:------|-----------:|-----------:|-----------:|-----------:|:---------------------|:-------------------|------:|----------------:|----------------:|-------:|-------:|:-------------------|--------:|-------:|-------:|:-----------------------|:---------|:--------------------|-------:|-------:|-------:|----------------:|:----------|-----------:|----------:|---------------:|----------------:|-------------:|-------------:|--------------:|------------:|-------------:|--------------:|------------:|----------------:|---------:|:----------|:---------|:-------------|:------------|:------------|-------------:|--------:|:--------------------------------|------------:|:------------|:------------------------|-----------:|\n|        4|Engraulis ringens        |elongated           |pelagic-neritic |WaterAssumed |                 3|             80|             3|   20.0|     NA|highly commercial |low        |seines             |never/rarely       |        0|harmless                       |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|          0|           0|            0|             0|           0|         0|         0|             0|              0|      0|     0|    0|     0|filtering plankton            |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|          0|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|     0|      0|      0|no special organs |males alike females                               |males alike females                      |none                   |more or less straight |               -1|more or less normal |more or less normal |sub-terminal/inferior |NA            |NA           |NA            |NA       |NA              |NA            |NA                                          |absent             |    NA|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |no spots           |NA                 |NA                |no spots or stripes          |NA                |no spots or stripes          |NA                |no spots or stripes          |NA                |              1|             0|               NA|               NA|             NA|             NA|           NA|           NA|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |            0|absent   |               38|               49|              NA|              NA|                 NA|                 NA|NA        |                NA|                NA|                NA|                NA|no striking attributes                 |      1|               0|               0|       0|                NA|                NA|absent |           0|           0|           0|           0|forked                |more or less normal |      1|                0|                0|      NA|      NA|more or less normal |        0|      NA|      NA|more or less normal     |abdominal |before origin of D1  |       0|       7|       7|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|         20.0|            NA|             NA|           NA|               NA|        NA|NA         |dioecism  |external      |NA           |NA           |            NA|       -1|Two seasonal peaks per year      |           -1|none         |Peruvian Anchoveta       |           0|\n|        5|Orthopristis chrysoptera |short and / or deep |demersal        |WaterAssumed |                10|             NA|             4|   46.0|    900|minor commercial  |low        |seines             |never/rarely       |        0|harmless                       |no special ability |      -1|                 0|           0|            0|         0|         -1|           0|     0|      -1|          0|           0|            0|             0|           0|        -1|        -1|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|         -1|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|         -1|    -1|      0|      0|no special organs |males alike females                               |males alike females                      |none                   |more or less straight |               -1|more or less normal |more or less normal |terminal              |NA            |NA           |NA            |NA       |NA              |NA            |ctenoid scales                              |absent             |     0|present       |mainly ventral |absent        |NA                 |NA                       |present       |mainly dorsal  |ending before ventral contour |absent        |NA             |NA              |no spots           |NA                 |NA                |more than one spot or stripe |NA                |no spots or stripes          |NA                |no spots or stripes          |NA                |              1|             0|               55|               58|             NA|             NA|           NA|           NA|                10|                10|                19|                19|              NA|              NA|         0|NA          |            0|absent   |               12|               13|               8|               8|                 NA|                 NA|NA        |                NA|                NA|                NA|                NA|no striking attributes                 |      1|              12|              13|       0|                15|                16|absent |           0|           0|           0|           0|forked                |more or less normal |      1|                3|                3|      12|      13|more or less normal |       NA|      17|      19|more or less normal     |thoracic  |behind origin of D1  |      NA|      NA|      NA|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|           NA|            NA|             NA|           NA|               NA|        NA|NA         |dioecism  |external      |monogamy     |NA           |             1|        0|one clear seasonal peak per year |           -1|none         |Pigfish                  |           0|\n|        6|Coryphaena hippurus      |elongated           |pelagic-neritic |WaterAssumed |                 0|             85|             4|  210.0|  40000|highly commercial |high       |various gears      |commercial         |        1|reports of ciguatera poisoning |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|         -1|           0|            0|             0|           0|         0|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|          0|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|     0|      0|      0|no special organs |always different morphology between mature adults |males alike females                      |striking shape of body |clearly convex        |               -1|more or less normal |more or less normal |terminal              |present       |present      |NA            |NA       |NA              |present       |cycloid scales                              |absent             |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |dorsal and ventral |on trunk and tail |no spots or stripes          |NA                |no spots or stripes          |NA                |no spots or stripes          |NA                |              1|             0|              200|               NA|             NA|             NA|           NA|           NA|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |            0|absent   |               NA|               NA|              NA|              NA|                 NA|                 NA|NA        |                13|                14|                31|                31|extending over most of the back length |      1|               0|               0|       0|                58|                66|absent |           0|           0|           0|           0|forked                |more or less normal |      1|                0|                0|      25|      31|more or less normal |        0|      NA|      NA|more or less normal     |thoracic  |behind origin of D1  |       0|      NA|      NA|               NA|NA         |         123|       22.3|             7.8|             23.3|          51.5|          22.3|           18.4|         23.3|           4.9|            4.9|         24.3|             30.4|        13|NA         |dioecism  |external      |NA           |NA           |            NA|       -1|Variable throughout range        |           -1|none         |Common Dolphinfish       |           0|\n|        7|Coryphaena equiselis     |fusiform / normal   |pelagic-oceanic |WaterAssumed |                 0|            400|             4|  145.7|     NA|minor commercial  |unknown    |various gears      |never/rarely       |        1|harmless                       |no special ability |       0|                 0|           0|            0|         0|          0|           0|     0|      -1|         -1|           0|            0|             0|           0|         0|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|          0|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|     0|      0|      0|NA                |NA                                                |NA                                       |none                   |clearly convex        |               -1|more or less normal |more or less normal |terminal              |present       |present      |present       |present  |NA              |present       |cycloid scales                              |absent             |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |dorsal and ventral |on trunk and tail |no spots or stripes          |no colored margin |no spots or stripes          |no colored margin |no spots or stripes          |no colored margin |              1|             0|              160|              200|             NA|             NA|           NA|           NA|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |           NA|NA       |                8|                9|               1|               1|                  9|                 10|NA        |                13|                14|                33|                33|extending over most of the back length |      1|               0|               0|       0|                52|                59|absent |           0|           0|           0|           0|forked                |more or less normal |      1|                0|                0|      24|      28|more or less normal |        0|      18|      20|more or less normal     |thoracic  |behind origin of D1  |       1|       5|      NA|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|           NA|            NA|             NA|           NA|               NA|        NA|NA         |dioecism  |external      |NA           |NA           |            NA|        0|NA                               |           -1|none         |Pompano Dolphinfish      |           0|\n|        9|Abalistes stellatus      |short and / or deep |demersal        |WaterAssumed |                 7|            350|            NA|   60.0|     NA|commercial        |medium     |trawls             |never/rarely       |        0|harmless                       |no special ability |       0|                 0|           0|            0|         0|          0|           0|     0|       0|          0|           0|            0|             0|           0|         0|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|         -1|   -1|      0|    0|     0|       0|   -1|  -1|    0|        0|       0|          0|     0|      0|      0|no special organs |males alike females                               |males alike females                      |striking fins          |clearly convex        |               -1|more or less normal |more or less normal |terminal              |present       |present      |NA            |NA       |NA              |NA            |NA                                          |absent             |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |mainly dorsal      |mainly on trunk   |more than one spot or stripe |no colored margin |no spots or stripes          |no colored margin |more than one spot or stripe |no colored margin |             NA|             0|               NA|               NA|             NA|             NA|           33|           41|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |            0|absent   |               NA|               NA|              NA|              NA|                 NA|                 NA|NA        |                NA|                NA|                NA|                NA|first rays forming locking device      |      2|               3|               3|       0|                25|                27|absent |           0|           0|           0|           0|more or less truncate |more or less normal |      1|                0|                0|      24|      26|more or less normal |        0|      13|      16|joint to one spine only |abdominal |behind origin of D1  |      NA|      NA|      NA|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|           NA|            NA|             NA|           NA|               NA|        NA|NA         |dioecism  |external      |monogamy     |NA           |             1|        0|NA                               |            0|NA           |Starry Triggerfish       |           0|\n|       10|Alectis indica           |short and / or deep |reef-associated |WaterAssumed |                20|            100|            NA|  165.0|  25000|commercial        |medium     |hooks and lines    |never/rarely       |        1|harmless                       |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|          0|           0|            0|             0|           0|        -1|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|         -1|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|     0|      0|      0|no special organs |males alike females                               |males alike females                      |none                   |more or less straight |               -1|more or less normal |more or less normal |terminal              |present       |present      |NA            |NA       |NA              |NA            |scales embedded or partly/completely absent |along lateral line |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |no spots           |NA                 |NA                |no spots or stripes          |colored margin    |no spots or stripes          |colored margin    |no spots or stripes          |colored margin    |              1|             0|               NA|               NA|             NA|             NA|           NA|           NA|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |            0|absent   |               21|               26|               8|              11|                 29|                 37|NA        |                10|                10|                24|                24|other                                  |      2|               7|               7|       0|                18|                20|absent |           0|           0|           0|           0|forked                |more or less normal |      2|                3|                3|      15|      20|more or less normal |       NA|      18|      18|more or less normal     |abdominal |before origin of D1  |       1|       5|       5|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|           NA|            NA|             NA|           NA|               NA|        NA|NA         |dioecism  |external      |NA           |NA           |            NA|        0|NA                               |            0|none         |Indian Threadfish        |           0|\n|       12|Cephalopholis cruentata  |fusiform / normal   |reef-associated |WaterAssumed |                 0|            170|            13|   42.6|   1130|minor commercial  |very high  |seines             |never/rarely       |        0|reports of ciguatera poisoning |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|          0|           0|            0|             0|           0|        -1|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|       -1|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|          0|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|    -1|      0|      0|no special organs |males alike females                               |males alike females                      |none                   |more or less straight |               -1|more or less normal |more or less normal |superior              |present       |present      |present       |present  |NA              |NA            |ctenoid scales                              |absent             |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |lateral            |on trunk and tail |more than one spot or stripe |no colored margin |more than one spot or stripe |no colored margin |more than one spot or stripe |no colored margin |              1|             0|               47|               51|             NA|             NA|           69|           81|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |            0|absent   |               NA|               NA|              NA|              NA|                 18|                 25|NA        |                NA|                NA|                NA|                NA|no striking attributes                 |      1|               9|               9|       0|                13|                15|absent |           0|           0|           0|           0|more or less truncate |more or less normal |      1|                3|                3|       8|       8|more or less normal |        0|      16|      NA|more or less normal     |abdominal |behind origin of D1  |       1|       5|       5|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|         37.0|            NA|             NA|           NA|               NA|        NA|NA         |protogyny |external      |NA           |NA           |            NA|       -1|one clear seasonal peak per year |            0|none         |Graysby                  |           0|\n|       14|Epinephelus adscensionis |fusiform / normal   |demersal        |WaterAssumed |                 1|            120|            25|   65.0|   4500|highly commercial |very high  |NA                 |never/rarely       |        1|reports of ciguatera poisoning |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|          0|           0|            0|             0|           0|        -1|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|       -1|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|          0|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|    -1|      0|      0|no special organs |males alike females                               |males alike females                      |none                   |more or less straight |               -1|more or less normal |more or less normal |terminal              |NA            |NA           |NA            |NA       |NA              |NA            |ctenoid scales                              |absent             |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |lateral            |on trunk and tail |more than one spot or stripe |colored margin    |more than one spot or stripe |colored margin    |more than one spot or stripe |colored margin    |              1|             0|               NA|               NA|             NA|             NA|           NA|           NA|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |            0|absent   |               NA|               NA|              NA|              NA|                 NA|                 NA|NA        |                NA|                NA|                NA|                NA|no striking attributes                 |      1|              11|              11|       0|                16|                17|absent |           0|           0|           0|           0|more or less truncate |NA                  |      1|                3|                3|       8|       8|more or less normal |       NA|      18|      19|more or less normal     |abdominal |behind origin of D1  |      NA|      NA|      NA|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|           NA|            NA|             NA|           NA|               NA|        NA|NA         |protogyny |external      |NA           |NA           |            NA|       -1|NA                               |            0|none         |Rock Hind                |           0|\n|       15|Epinephelus guttatus     |fusiform / normal   |reef-associated |WaterAssumed |               100|             NA|            22|   76.0|  25000|highly commercial |high       |hooks and lines    |never/rarely       |        1|reports of ciguatera poisoning |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|          0|           0|            0|             0|           0|         0|         0|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|       -1|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|          0|    0|      0|    0|     0|       0|    0|   0|    0|        0|       0|          0|    -1|      0|      0|NA                |NA                                                |NA                                       |none                   |clearly convex        |               -1|more or less normal |more or less normal |superior              |present       |present      |NA            |present  |NA              |NA            |ctenoid scales                              |absent             |     0|absent        |NA             |absent        |NA                 |NA                       |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |dorsal and ventral |NA                |more than one spot or stripe |NA                |more than one spot or stripe |NA                |more than one spot or stripe |NA                |              1|             0|               65|               74|             NA|             NA|           92|          104|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |           NA|NA       |               16|               18|               8|               9|                 24|                 26|NA        |                NA|                NA|                NA|                NA|no striking attributes                 |      1|              11|              11|      -1|                15|                16|absent |           0|           0|           0|           0|more or less truncate |more or less normal |      1|                3|                3|       8|       8|more or less normal |        0|      16|      18|more or less normal     |thoracic  |beneath origin of D1 |       1|       5|       5|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|         34.5|            NA|             NA|           NA|               NA|        NA|NA         |protogyny |external      |NA           |NA           |            NA|       -1|one clear seasonal peak per year |            0|none         |Red Hind                 |           0|\n|       16|Epinephelus itajara      |fusiform / normal   |reef-associated |WaterAssumed |                 0|            100|            37|  250.0| 455000|minor commercial  |very high  |hooks and lines    |never/rarely       |        1|traumatogenic                  |no special ability |      -1|                 0|           0|            0|         0|          0|           0|     0|      -1|          0|           0|            0|             0|           0|        -1|        -1|             0|              0|      0|     0|    0|     0|hunting macrofauna (predator) |          0|        0|         0|          0|            0|         0|         0|         0|        0|       0|       0|      0|        0|         0|       0|           0|            0|           0|         -1|    0|      0|    0|     0|       0|    0|  -1|    0|        0|       0|          0|    -1|      0|      0|no special organs |males alike females                               |different colors in juveniles and adults |none                   |more or less straight |               -1|more or less normal |more or less normal |superior              |present       |present      |NA            |NA       |NA              |NA            |ctenoid scales                              |absent             |     0|absent        |NA             |present       |dorsal and ventral |reaching ventral contour |absent        |NA             |NA                            |absent        |NA             |NA              |more than one spot |lateral            |on trunk and tail |more than one spot or stripe |no colored margin |more than one spot or stripe |no colored margin |more than one spot or stripe |no colored margin |              1|             0|               61|               64|             NA|             NA|           89|          112|                NA|                NA|                NA|                NA|              NA|              NA|         0|NA          |           NA|NA       |               13|               15|               8|               9|                 21|                 24|NA        |                NA|                NA|                NA|                NA|no striking attributes                 |      1|              11|              11|      -1|                15|                16|absent |           0|           0|           0|           0|more or less truncate |NA                  |      1|                3|                3|       8|       8|more or less normal |        1|       8|      19|more or less normal     |abdominal |behind origin of D1  |      NA|      NA|      NA|               NA|NA         |          NA|         NA|              NA|               NA|            NA|            NA|             NA|         32.8|            NA|             NA|           NA|               NA|        NA|NA         |protogyny |external      |NA           |NA           |            NA|       -1|NA                               |            0|none         |Atlantic Goliath Grouper |           1|\n:::\n:::\n\n\n## Methods\n\nTo get started, there are several packages I will be using. *Tidyverse* packages help with further cleaning and preparing data. *Tidymodels* packages have almost all of what I need for the machine learning steps. *kknn* helps me build my knn model.\n*knitr* is used to create kable tables. *baguette* is used in my bagging model. *doParallel* allows for parallel computing on my laptop. *vip* helps to identify variable importance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(kknn)\nlibrary(knitr)\nlibrary(baguette)\nlibrary(doParallel)\nlibrary(vip)\n```\n:::\n\n\nFirst I read in the data. These data were cleaned and joined in a separate script, but they will still need a bit of preprocessing. The outcome variable in this dataset is labeled IsOfConcern and indicates if the species is at risk or extinction (1) or not (0). I start out by exploring the data dimensions. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in data\nfish_dat_full <- read_csv(\"/Users/elkewindschitl/Documents/data-sci/fish_data.csv\") \nfish_dat <- fish_dat_full %>%\n  filter(!is.na(IsOfConcern)) # remove columns that don't have outcome variable\n\n# Explore some characteristics of the dataset\ncols <- ncol(fish_dat)\nrows <- nrow(fish_dat)\ndf_chars <- data.frame(\n  Metric = c(\"Number of Columns\", \"Number of Rows\"),\n  Count = c(ncol(fish_dat), nrow(fish_dat)))\nkable(df_chars,\n      col.names = c(\"\", \"Count\"))\n```\n\n::: {.cell-output-display}\n|                  | Count|\n|:-----------------|-----:|\n|Number of Columns |   196|\n|Number of Rows    |  9875|\n:::\n\n```{.r .cell-code}\nfish_dat %>% \n  group_by(IsOfConcern) %>%\n  count() %>% \n  kable(col.names = c(\"Species threat is of concern\", \"Count\"))\n```\n\n::: {.cell-output-display}\n| Species threat is of concern| Count|\n|----------------------------:|-----:|\n|                            0|  9156|\n|                            1|   719|\n:::\n:::\n\n\n### Data Prep\n\nThere are a lot on NA values in this dataset. I have a lot of columns already, so I can reduce that by removing columns that have a high proportion of NA values. Here I only keep columns where less than 20% of rows have NA values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate the proportion of NA values in each column\nna_proportion <- colMeans(is.na(fish_dat), na.rm = TRUE)\n\n#I want to remove rows with extreme NA counts (more than 20%)\n# Define the threshold (20% or 0.20)\nthreshold <- 0.20\n\n# Find columns with more than the threshold proportion of NA values\ncolumns_meeting_threshold <- names(na_proportion[na_proportion <= threshold])\n\n# Print the column names that meet the threshold\ncolumns_meeting_threshold %>% kable(col.names = \"Columns that are below NA threshold\")\n```\n\n::: {.cell-output-display}\n|Columns that are below NA threshold |\n|:-----------------------------------|\n|SpecCode                            |\n|GenusSpecies                        |\n|BodyShapeI                          |\n|DemersPelag                         |\n|AirBreathing                        |\n|DepthRangeDeep                      |\n|Length                              |\n|PriceCateg                          |\n|UsedforAquaculture                  |\n|GameFish                            |\n|Dangerous                           |\n|Electrogenic                        |\n|MainCommonName                      |\n|IsOfConcern                         |\n:::\n\n```{.r .cell-code}\n# Select for just those columns that meet my criteria\nfish_short <- fish_dat %>% \n  select(all_of(columns_meeting_threshold))\n```\n:::\n\n\nThere is still more to be done. I want to make sure numeric columns are numeric, and that character columns are treated as factors. I need to make sure my outcome variable is a factor as well. I have a small enough data frame that I am able to do this by looking at which columns are character and mutating them to be factors. I want unordered factors, and I need to remove columns that are identifiers rather than features. Because some of the algorithms I am working with here do not handle missing data well, I chose to remove all of the rows that had NA values. This did unfortunately cut down on the amount of data that I have to train and test the algorithms on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find character columns that need to be converted to factor\nsapply(fish_short, class) %>% kable(col.names = c(\"Column\", \"Class\"))\n```\n\n::: {.cell-output-display}\n|Column             |Class     |\n|:------------------|:---------|\n|SpecCode           |numeric   |\n|GenusSpecies       |character |\n|BodyShapeI         |character |\n|DemersPelag        |character |\n|AirBreathing       |character |\n|DepthRangeDeep     |numeric   |\n|Length             |numeric   |\n|PriceCateg         |character |\n|UsedforAquaculture |character |\n|GameFish           |numeric   |\n|Dangerous          |character |\n|Electrogenic       |character |\n|MainCommonName     |character |\n|IsOfConcern        |numeric   |\n:::\n\n```{.r .cell-code}\n# List of character columns to convert to factors\ncharacter_columns_to_convert <- c(\"GenusSpecies\", \"BodyShapeI\", \"DemersPelag\", \"AirBreathing\", \"PriceCateg\", \"UsedforAquaculture\", \"Dangerous\", \"Electrogenic\", \"MainCommonName\")\n\n# Convert the specified character columns to factors\nfish <- fish_short %>%\n  mutate(across(all_of(character_columns_to_convert), as.factor))\n\n# If feature is a factor DON'T order, remove identifying columns\nfish <- fish %>% mutate_if(is.ordered, .funs = factor, ordered = F)  %>% \n  select(-GenusSpecies) %>% \n  select(-SpecCode) %>% \n  select(-MainCommonName)\n\n# Make outcome factor\nfish$IsOfConcern <- as.factor(fish$IsOfConcern)\n\n# Remove rows with any remaining missing values\nfish <- na.omit(fish)\n\n# Check the new df\nsapply(fish, class) %>% kable(col.names = c(\"Column\", \"Class\"))\n```\n\n::: {.cell-output-display}\n|Column             |Class   |\n|:------------------|:-------|\n|BodyShapeI         |factor  |\n|DemersPelag        |factor  |\n|AirBreathing       |factor  |\n|DepthRangeDeep     |numeric |\n|Length             |numeric |\n|PriceCateg         |factor  |\n|UsedforAquaculture |factor  |\n|GameFish           |numeric |\n|Dangerous          |factor  |\n|Electrogenic       |factor  |\n|IsOfConcern        |factor  |\n:::\n:::\n\n\nAfter my data are prepped, I need to split the data into training and testing data sets. I use a 70/30 split. I have unbalanced data, so I stratify by my outcome variable, IsOfConcern\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n# Initial split of data, default 70/30\nfish_split <- initial_split(fish, prop = 0.7, strata = IsOfConcern)\nfish_train <- training(fish_split)  # Training data\nfish_test <- testing(fish_split)    # Test data\n```\n:::\n\n\n### Preprocessing\n\nI create a recipe for the preprocessing steps used. I use dummy columns to make all the factor (categorical) variables have their own column. I remove columns where there is no variation in the data. Then I normalize the numeric columns because the lasso and knn algorithms require normalization to avoid certain features dominating the model. I use the same preprocessing steps for all algorithms for adequate comparison. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n# Preprocess the data within the recipe\nfish_recipe <- recipe(IsOfConcern ~ ., data = fish_train) %>% \n  step_dummy(all_factor(), -all_outcomes(), one_hot = TRUE) %>% \n  step_zv(all_predictors()) %>%  \n  step_normalize(all_numeric(), -all_outcomes())\n\n# Check test and train dfs look as expected\nprepped <- fish_recipe %>% \n  prep()\nfish_baked_train <- bake(prepped, fish_train)\nfish_baked_test <- bake(prepped, fish_test)\n\n# Use below to check for NA values in the entire dataframes\n#any(is.na(fish_baked_train))\n#any(is.na(fish_baked_test))\n```\n:::\n\n\n### Dummy Classifier\n\nBecause my data are unbalanced with many more non-threatened species, if a model always chose non-threatened it would have a high accuracy. Of course, that is not very helpful when trying to predict which species *are or might be* threatened. Here I derive a dummy accuracy by calculating the accuracy of a model that always predicts non-threatened. This will serve as a baseline for if a model is performing well (better than the dummy) or not. However, because this dataset is so imbalanced, I will be using area under the curve (AUC) for model selection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate dummy classifier for baseline comparison\n# Calculate the number of rows where IsOfConcern is 0\nnum_is_0 <- sum(fish_test$IsOfConcern == 0)\n\n# Calculate the number of rows where IsOfConcern is not 0\nnum_is_not_0 <- nrow(fish_test) - num_is_0\n\n# Calculate the accuracy of the dummy classifier (always predicting the majority class)\ndummy <- num_is_0 / nrow(fish_test)\n```\n:::\n\n\nThe dummy classifier accuracy is 0.94. This will serve as the baseline for other algorithms. Now I will proceed with building various models and training with the training data. I will be building Lasso, K-Nearest Neighbors, Decision Tree, Bagged Decision Tree, Random Forest, and Gradient Boosted Decision Tree models.\n\n### Lasso for Classification\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\n# Set up k-fold cross validation with 10 folds. This can be used for all the algorithms\nfish_cv = fish_train %>% \n  vfold_cv(v = 10,\n           strata = IsOfConcern)\n\n# Set specifications\ntune_l_spec <- logistic_reg(penalty = tune(), mixture = 1) %>%\n  set_engine(\"glmnet\")\n\n# Define a workflow\nwf_l <- workflow() %>%\n  add_model(tune_l_spec) %>% \n  add_recipe(fish_recipe)\n# set grid\nlambda_grid <- grid_regular(penalty(), levels = 50)\n\ndoParallel::registerDoParallel()\nset.seed(123)\n\n# Tune lasso model\nlasso_grid <-   wf_l %>% \n  tune_grid(\n    add_model(tune_l_spec),\n    resamples = fish_cv,\n    grid = lambda_grid\n)\n\n# Plot the mean accuracy and AUC at each penalty\nlasso_grid %>%\n  collect_metrics() %>%\n  ggplot(aes(penalty, mean, color = .metric)) +\n  geom_errorbar(aes(ymin = mean - std_err,\n                    ymax = mean + std_err),\n                alpha = 0.5) +\n  geom_line(size = 1.5) +\n  facet_wrap(~.metric, \n             scales = \"free\", \n             strip.position = \"left\",\n             nrow = 2, labeller = as_labeller(c(`accuracy` = \"Accuracy\", \n                                                `roc_auc` = \"Area under ROC curve\"))) +\n  scale_x_log10(name = \"Penalty\") +\n  scale_y_continuous(name = \"\") +\n  scale_color_manual(values = c(\"#4a6c75\", \"#57ba72\")) +\n  theme_minimal() +\n  theme(\n    strip.placement = \"outside\",\n    legend.position = \"none\",\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Results of penalty tuning\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# View table\nlasso_grid %>%\n  tune::show_best(metric = \"roc_auc\") %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the penalty parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the penalty parameter values.\n\n|   penalty|.metric |.estimator |      mean|  n|   std_err|.config               |\n|---------:|:-------|:----------|---------:|--:|---------:|:---------------------|\n| 0.0022230|roc_auc |binary     | 0.8411065| 10| 0.0163830|Preprocessor1_Model37 |\n| 0.0013895|roc_auc |binary     | 0.8406888| 10| 0.0174560|Preprocessor1_Model36 |\n| 0.0008685|roc_auc |binary     | 0.8404846| 10| 0.0176116|Preprocessor1_Model35 |\n| 0.0035565|roc_auc |binary     | 0.8397288| 10| 0.0156837|Preprocessor1_Model38 |\n| 0.0005429|roc_auc |binary     | 0.8392379| 10| 0.0172147|Preprocessor1_Model34 |\n:::\n\n```{.r .cell-code}\n# Select the model with the highest auc\nbest_lasso <- lasso_grid %>%\n  select_best(\"roc_auc\")\n\nfinal_l_wf <- wf_l %>% \n  finalize_workflow(best_lasso)\n\n# Perform a last fit to see how the model performs on the test data\nfinal_lasso_fit <- last_fit(final_l_wf, fish_split)\n\n# Collect metrics on the test data\ntibble_lasso <- final_lasso_fit %>% collect_metrics()\ntibble_lasso %>% \n  kable(caption = \"Accuracy and area under ther receiver operator curve of the final fit.\")\n```\n\n::: {.cell-output-display}\nTable: Accuracy and area under ther receiver operator curve of the final fit.\n\n|.metric  |.estimator | .estimate|.config              |\n|:--------|:----------|---------:|:--------------------|\n|accuracy |binary     | 0.9433472|Preprocessor1_Model1 |\n|roc_auc  |binary     | 0.8017930|Preprocessor1_Model1 |\n:::\n\n```{.r .cell-code}\n# Grab the model accuracy on the testing data\nfinal_lasso_accuracy <- tibble_lasso %>%\n  filter(.metric == \"accuracy\") %>%\n  pull(.estimate)\nfinal_lasso_auc <- tibble_lasso %>%\n  filter(.metric == \"roc_auc\") %>%\n  pull(.estimate)\n\n# Bind predictions and original data\nlasso_test_rs <- cbind(fish_test, final_lasso_fit$.predictions)[, -16]# Remove duplicate column\n\n# Compute a confusion matrix\ncm_lasso <- lasso_test_rs %>% yardstick::conf_mat(truth = IsOfConcern, estimate = .pred_class) \n\n# Create a custom color palette\ncustom_palette <- scale_fill_gradient(\n  high = \"#4a6c75\",   \n  low = \"#d3e6eb\"  \n)\n\n# Create the confusion matrix heatmap plot\nautoplot(cm_lasso, type = \"heatmap\") +\n  custom_palette +  # Apply the custom color palette\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Confusion matrix of lasso predictions on test data\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate rates of tru pos, false neg. etc. from the confusion matrix\nTP_las <- cm_lasso$table[2, 2]\nFP_las <- cm_lasso$table[2, 1]\nTN_las <- cm_lasso$table[1, 1]\nFN_las <- cm_lasso$table[1, 2]\nTPR_las <- TP_las / (TP_las + FN_las)  # True Positive Rate\nFPR_las <- FP_las / (FP_las + TN_las)  # False Positive Rate\nTNR_las <- TN_las / (TN_las + FP_las)  # True Negative Rate\nFNR_las <- FN_las / (TP_las + FN_las)  # False Negative Rate\n\n# Create cm df to hold all false pos, etc. metrics\nlasso_cm_vec <- c(TPR_las, FPR_las, TNR_las, FNR_las)\nrow_names <- c(\"True positive rate\", \"False positive rate\", \"True negative rate\", \"False negative rate\")\ncm_df <- bind_cols(Metric = row_names, Lasso = lasso_cm_vec)\n```\n:::\n\n\nThe accuracy for the lasso model was 0.943 which is slightly better than our dummy classifier that had an accuracy of 0.94. This model had an AUC of 0.802. \n\n### K-Nearest Neighbors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\n# Define the KNN model with tuning\nknn_spec_tune <- nearest_neighbor(neighbors = tune()) %>% # tune k\n  set_mode(\"classification\") %>% \n  set_engine(\"kknn\")\n\n# Define a new workflow\nwf_knn_tune <- workflow() %>% \n  add_model(knn_spec_tune) %>% \n  add_recipe(fish_recipe)\n    \n# Fit the workflow on the predefined folds and hyperparameters\nfit_knn_cv <- wf_knn_tune %>% \n  tune_grid( \n    fish_cv, \n    grid = data.frame(neighbors = c(1,5,10,15,seq(20,200,10))))\n\n# Use autoplot() to examine how different parameter configurations relate to accuracy\nautoplot(fit_knn_cv) +\n  theme_light() +\n  labs(\n    x = \"Number of neighbors (K)\",\n    title = \"Results of neighbor tuning\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  facet_wrap(\n    ~.metric,\n    nrow = 2,\n    labeller = labeller(.metric = c(\"accuracy\" = \"Accuracy\", \"roc_auc\" = \"Area under ROC curve\"))\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# View table\nfit_knn_cv %>%\n  tune::show_best(metric = \"roc_auc\") %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the number of neighbors parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the number of neighbors parameter values.\n\n| neighbors|.metric |.estimator |      mean|  n|   std_err|.config               |\n|---------:|:-------|:----------|---------:|--:|---------:|:---------------------|\n|       150|roc_auc |binary     | 0.8630058| 10| 0.0132910|Preprocessor1_Model18 |\n|       130|roc_auc |binary     | 0.8628657| 10| 0.0131475|Preprocessor1_Model16 |\n|       140|roc_auc |binary     | 0.8628149| 10| 0.0132096|Preprocessor1_Model17 |\n|       160|roc_auc |binary     | 0.8627477| 10| 0.0133205|Preprocessor1_Model19 |\n|       170|roc_auc |binary     | 0.8625283| 10| 0.0133526|Preprocessor1_Model20 |\n:::\n\n```{.r .cell-code}\n# Select the model with the highest auc\nbest_knn <- fit_knn_cv %>%\n  select_best(\"roc_auc\")\n\n# The final workflow for our KNN model\nfinal_knn_wf <-\n  wf_knn_tune %>% \n  finalize_workflow(best_knn)\n\n# Use last_fit() approach to apply model to test data\nfinal_knn_fit <- last_fit(final_knn_wf, fish_split)\n\n# Collect metrics on the test data\ntibble_knn <- final_knn_fit %>% collect_metrics()\ntibble_knn %>% \n  kable(caption = \"Accuracy and area under the receiver operator curve of the final fit.\")\n```\n\n::: {.cell-output-display}\nTable: Accuracy and area under the receiver operator curve of the final fit.\n\n|.metric  |.estimator | .estimate|.config              |\n|:--------|:----------|---------:|:--------------------|\n|accuracy |binary     | 0.9407484|Preprocessor1_Model1 |\n|roc_auc  |binary     | 0.8511741|Preprocessor1_Model1 |\n:::\n\n```{.r .cell-code}\n# Store accuracy and AUC\nfinal_knn_accuracy <- tibble_knn %>%\n  filter(.metric == \"accuracy\") %>%\n  pull(.estimate)\nfinal_knn_auc <- tibble_knn %>%\n  filter(.metric == \"roc_auc\") %>%\n  pull(.estimate)\n\n# Bind predictions and original data\nknn_test_rs <- cbind(fish_test, final_knn_fit$.predictions)[, -16]\n\n# Compute a confusion matrix\ncm_knn <- knn_test_rs %>% yardstick::conf_mat(truth = IsOfConcern, estimate = .pred_class) \n\n# Create the confusion matrix heatmap plot\nautoplot(cm_knn, type = \"heatmap\") +\n  custom_palette +\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Confusion matrix of knn predictions on test data\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate rates from the confusion matrix\nTP_knn <- cm_knn$table[2, 2]\nFP_knn <- cm_knn$table[2, 1]\nTN_knn <- cm_knn$table[1, 1]\nFN_knn <- cm_knn$table[1, 2]\nTPR_knn <- TP_knn / (TP_knn + FN_knn)  # True Positive Rate\nFPR_knn <- FP_knn / (FP_knn + TN_knn)  # False Positive Rate\nTNR_knn <- TN_knn / (TN_knn + FP_knn)  # True Negative Rate\nFNR_knn <- FN_knn / (TP_knn + FN_knn)  # False Negative Rate\n\n# Add rates to cm df\nknn_cm_vec <- c(TPR_knn, FPR_knn, TNR_knn, FNR_knn)\ncm_df$KNN <- knn_cm_vec\n```\n:::\n\n\nThe k-nearest neighbors model had nearly the same accuracy at predicting threat status than the dummy classifier. The accuracy of the model was 0.941. This model had an AUC of 0.851 which is better than the lasso model. \n\n### Decision Tree\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tell the model that we are tuning hyperparams\ntree_spec_tune <- decision_tree(\n  cost_complexity = tune(),\n  tree_depth = tune(),\n  min_n = tune()) %>% \n  set_engine(\"rpart\") %>% \n  set_mode(\"classification\")\n\n# Set up grid\ntree_grid <- grid_regular(cost_complexity(), tree_depth(), min_n(), levels = 5)\n\n# Check grid\n#tree_grid \n\n# Define a workflow with the recipe and specification\nwf_tree_tune <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(tree_spec_tune)\n\ndoParallel::registerDoParallel(cores = 3) #build trees in parallel\n\n# Tune\ntree_rs <- tune_grid(\n  wf_tree_tune,\n  IsOfConcern~.,\n  resamples = fish_cv,\n  grid = tree_grid,\n  metrics = metric_set(roc_auc)\n)\n\n# Use autoplot() to examine how different parameter configurations relate to auc\nautoplot(tree_rs) + \n  theme_light() +\n  scale_color_manual(values = c(\"#4a6c75\", \"#57ba72\", \"#d596e0\", \"#e06d53\", \"#d6cf81\")) + \n  labs(x = \"Cost-complexity parameter\",\n       y = \"Area under the ROC curve\",\n       title = \"Results of tree tuning\") +\n  theme(\n    plot.title = element_text(size = 16, hjust = 0.5),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# View table\ntree_rs %>%\n  tune::show_best(metric = \"roc_auc\") %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the tuned tree parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the tuned tree parameter values.\n\n| cost_complexity| tree_depth| min_n|.metric |.estimator |      mean|  n|   std_err|.config                |\n|---------------:|----------:|-----:|:-------|:----------|---------:|--:|---------:|:----------------------|\n|       0.0000000|         11|    11|roc_auc |binary     | 0.8010909| 10| 0.0156204|Preprocessor1_Model041 |\n|       0.0000000|         11|    11|roc_auc |binary     | 0.8010909| 10| 0.0156204|Preprocessor1_Model042 |\n|       0.0000032|         11|    11|roc_auc |binary     | 0.8010909| 10| 0.0156204|Preprocessor1_Model043 |\n|       0.0005623|         11|    11|roc_auc |binary     | 0.8010909| 10| 0.0156204|Preprocessor1_Model044 |\n|       0.0005623|         15|    11|roc_auc |binary     | 0.7960204| 10| 0.0160636|Preprocessor1_Model049 |\n:::\n\n```{.r .cell-code}\n# Finalize the model specs with the best hyperparameter result\nfinal_tree <- finalize_model(tree_spec_tune, select_best(tree_rs))\n\n# Final fit to test data \nfinal_tree_fit <- last_fit(final_tree, IsOfConcern~., fish_split) # does training fit then final prediction as well\n\n# Collect metrics from fit\ntibble_tree <- final_tree_fit %>% collect_metrics()\ntibble_tree %>% kable(caption = \"Accuracy and area under ther receiver operator curve of the final fit.\")\n```\n\n::: {.cell-output-display}\nTable: Accuracy and area under ther receiver operator curve of the final fit.\n\n|.metric  |.estimator | .estimate|.config              |\n|:--------|:----------|---------:|:--------------------|\n|accuracy |binary     | 0.9438669|Preprocessor1_Model1 |\n|roc_auc  |binary     | 0.7751052|Preprocessor1_Model1 |\n:::\n\n```{.r .cell-code}\n# Store accuracy and auc metrics\nfinal_tree_accuracy <- tibble_tree %>%\n  filter(.metric == \"accuracy\") %>%\n  pull(.estimate)\n\nfinal_tree_auc <- tibble_tree %>%\n  filter(.metric == \"roc_auc\") %>%\n  pull(.estimate)\n\n# Bind predictions and original data\ntree_test_rs <- cbind(fish_test, final_tree_fit$.predictions)[, -16]\n\n# Compute a confusion matrix\ncm_tree <- tree_test_rs %>% yardstick::conf_mat(truth = IsOfConcern, estimate = .pred_class) \n\n# Create the confusion matrix heatmap plot\nautoplot(cm_tree, type = \"heatmap\") +\n  custom_palette +\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Confusion matrix of decision tree predictions on test data\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate rates from the confusion matrix\nTP_tree <- cm_tree$table[2, 2]\nFP_tree <- cm_tree$table[2, 1]\nTN_tree <- cm_tree$table[1, 1]\nFN_tree <- cm_tree$table[1, 2]\nTPR_tree <- TP_tree / (TP_tree + FN_tree)  # True Positive Rate\nFPR_tree <- FP_tree / (FP_tree + TN_tree)  # False Positive Rate\nTNR_tree <- TN_tree / (TN_tree + FP_tree)  # True Negative Rate\nFNR_tree <- FN_tree / (TP_tree + FN_tree)  # False Negative Rate\n\n# Add rates to cm df\ntree_cm_vec <- c(TPR_tree, FPR_tree, TNR_tree, FNR_tree)\ncm_df$DecisionTree <- tree_cm_vec\n```\n:::\n\n\nThe decision tree model had a higher accuracy at predicting threat status than the dummy classifier. The accuracy of the decision tree was 0.944. The AUC is 0.775 which is lower than the lasso model and the knn model.\n\n### Bagging\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n# Set bagging tuning specifications\nbag_spec <- \n  bag_tree(cost_complexity = tune(),\n  tree_depth = tune(),\n  min_n = tune()) %>% \n  set_engine(\"rpart\", times = 75) %>% # 25 ensemble members \n  set_mode(\"classification\")\n\n# Set up tuning grid\nbag_grid <- grid_regular(cost_complexity(), tree_depth(), min_n(), levels = 5)\n\n# Check the grid space\n#bag_grid\n\n# Set up bagging workflow\nwf_bag <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(bag_spec)\n\ndoParallel::registerDoParallel() #build trees in parallel\n\n# Run tuning\nbag_rs <- tune_grid(\n  wf_bag,\n  IsOfConcern~.,\n  resamples = fish_cv,\n  grid = bag_grid,\n  metrics = metric_set(roc_auc)\n)\n\n# Use autoplot() to examine how different parameter configurations relate to auc\nautoplot(bag_rs) + \n  theme_light() +\n  scale_color_manual(values = c(\"#4a6c75\", \"#57ba72\", \"#d596e0\", \"#e06d53\", \"#d6cf81\")) + \n  labs(x = \"Cost-complexity parameter\",\n       y = \"Area under the ROC curve\",\n       title = \"Results of bagging tuning\") +\n  theme(\n    plot.title = element_text(size = 16, hjust = 0.5),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# View table\nbag_rs %>%\n  tune::show_best() %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the tuned tree parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the tuned tree parameter values.\n\n| cost_complexity| tree_depth| min_n|.metric |.estimator |      mean|  n|   std_err|.config                |\n|---------------:|----------:|-----:|:-------|:----------|---------:|--:|---------:|:----------------------|\n|       0.0005623|         15|    11|roc_auc |binary     | 0.8820775| 10| 0.0098248|Preprocessor1_Model049 |\n|       0.0005623|         15|    21|roc_auc |binary     | 0.8812587| 10| 0.0123964|Preprocessor1_Model074 |\n|       0.0000032|         15|    11|roc_auc |binary     | 0.8791856| 10| 0.0137413|Preprocessor1_Model048 |\n|       0.0000032|         11|    21|roc_auc |binary     | 0.8787266| 10| 0.0122258|Preprocessor1_Model068 |\n|       0.0000000|         15|    11|roc_auc |binary     | 0.8779793| 10| 0.0117088|Preprocessor1_Model047 |\n:::\n\n```{.r .cell-code}\n# Finalize the model specs witht he best performing model\nfinal_bag <- finalize_model(bag_spec, select_best(bag_rs))\n\n# Perform a last fit of the model on the testing data\nfinal_bag_fit <- last_fit(final_bag, IsOfConcern~., fish_split)\n\n# Collect metrics from fit\ntibble_bag <- final_bag_fit %>% collect_metrics()\ntibble_bag %>% \n  kable(caption = \"Accuracy and area under ther receiver operator curve of the final fit.\")\n```\n\n::: {.cell-output-display}\nTable: Accuracy and area under ther receiver operator curve of the final fit.\n\n|.metric  |.estimator | .estimate|.config              |\n|:--------|:----------|---------:|:--------------------|\n|accuracy |binary     | 0.9438669|Preprocessor1_Model1 |\n|roc_auc  |binary     | 0.8568390|Preprocessor1_Model1 |\n:::\n\n```{.r .cell-code}\n# Store model accuracy and auc on testing data\nfinal_bag_accuracy <- tibble_bag %>%\n  filter(.metric == \"accuracy\") %>%\n  pull(.estimate)\nfinal_bag_auc <- tibble_bag %>%\n  filter(.metric == \"roc_auc\") %>%\n  pull(.estimate)\n\n# Bind predictions and original data\nbag_test_rs <- cbind(fish_test, final_bag_fit$.predictions)[, -16]\n\n# Compute a confusion matrix\ncm_bag <- bag_test_rs %>% yardstick::conf_mat(truth = IsOfConcern, estimate = .pred_class) \n\n# Create the confusion matrix heatmap plot\nautoplot(cm_bag, type = \"heatmap\") +\n  custom_palette +  # Apply the custom color palette\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Confusion matrix of bagging predictions on test data\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate rates from the confusion matrix\nTP_bag <- cm_bag$table[2, 2]\nFP_bag <- cm_bag$table[2, 1]\nTN_bag <- cm_bag$table[1, 1]\nFN_bag <- cm_bag$table[1, 2]\nTPR_bag <- TP_bag / (TP_bag + FN_bag)  # True Positive Rate\nFPR_bag <- FP_bag / (FP_bag + TN_bag)  # False Positive Rate\nTNR_bag <- TN_bag / (TN_bag + FP_bag)  # True Negative Rate\nFNR_bag <- FN_bag / (TP_bag + FN_bag)  # False Negative Rate\n\n# Add rates to cm df\nbag_cm_vec <- c(TPR_bag, FPR_bag, TNR_bag, FNR_bag)\ncm_df$Bagging <- bag_cm_vec\n```\n:::\n\n\nThe bagging model had a similar accuracy at predicting threat status as the decision tree and lasso model. The accuracy of the bagging was 0.944. The AUC is 0.857 which is similar to the knn model.\n\n### Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\n# Set forest specifications\nforest_spec <- \n  rand_forest(min_n = tune(),\n              mtry = tune(),\n              trees = tune()) %>%\n  set_engine(\"ranger\") %>%\n  set_mode(\"classification\")\n\n# Set grid for tuning\nforest_grid <- grid_regular(min_n(), mtry(c(1,44)), trees(), levels = 5)\n\n# Check the grid space\n#forest_grid\n\n# Set the workflow with the recipe and forest specs\nwf_forest <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(forest_spec)\n\ndoParallel::registerDoParallel()\n\n# Perform tuning\nforest_rs <- tune_grid(\n  wf_forest,\n  IsOfConcern~.,\n  resamples = fish_cv,\n  grid = forest_grid,\n  metrics = metric_set(roc_auc)\n)\n\n# Use autoplot() to examine how different parameter configurations relate to auc\nautoplot(forest_rs) + \n  theme_light() +\n  scale_color_manual(values = c(\"#4a6c75\", \"#57ba72\", \"#d596e0\", \"#e06d53\", \"#d6cf81\")) + \n  labs(x = \"# Randomly selected predictors\",\n       y = \"Area under the ROC curve\",\n       title = \"Results of random forest tuning\") +\n  theme(\n    plot.title = element_text(size = 16, hjust = 0.5),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# View table\nforest_rs %>%\n  tune::show_best() %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the tree and forest parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the tree and forest parameter values.\n\n| mtry| trees| min_n|.metric |.estimator |      mean|  n|   std_err|.config                |\n|----:|-----:|-----:|:-------|:----------|---------:|--:|---------:|:----------------------|\n|   11|  2000|    11|roc_auc |binary     | 0.8855631| 10| 0.0134102|Preprocessor1_Model107 |\n|   11|   500|     2|roc_auc |binary     | 0.8850774| 10| 0.0133817|Preprocessor1_Model031 |\n|   11|  1500|    11|roc_auc |binary     | 0.8850390| 10| 0.0138726|Preprocessor1_Model082 |\n|   11|  1500|     2|roc_auc |binary     | 0.8847734| 10| 0.0135810|Preprocessor1_Model081 |\n|   11|  1000|    11|roc_auc |binary     | 0.8846533| 10| 0.0141003|Preprocessor1_Model057 |\n:::\n\n```{.r .cell-code}\n# Finalize model with specs and best hyperparameters\nfinal_forest <- finalize_model(forest_spec, select_best(forest_rs))\n\n# Perform last fit\nfinal_forest_fit <- last_fit(final_forest, IsOfConcern~., fish_split)\n\n# Collect performance metrics\ntibble_forest <- final_forest_fit %>% collect_metrics()\ntibble_forest %>% \n  kable(caption = \"Accuracy and area under ther receiver operator curve of the final fit.\")\n```\n\n::: {.cell-output-display}\nTable: Accuracy and area under ther receiver operator curve of the final fit.\n\n|.metric  |.estimator | .estimate|.config              |\n|:--------|:----------|---------:|:--------------------|\n|accuracy |binary     | 0.9433472|Preprocessor1_Model1 |\n|roc_auc  |binary     | 0.8240705|Preprocessor1_Model1 |\n:::\n\n```{.r .cell-code}\n# Store accuracy and auc metrics\nfinal_forest_accuracy <- tibble_forest %>%\n  filter(.metric == \"accuracy\") %>%\n  pull(.estimate)\nfinal_forest_auc <- tibble_forest %>%\n  filter(.metric == \"roc_auc\") %>%\n  pull(.estimate)\n\n# Bind predictions and original data\nforest_test_rs <- cbind(fish_test, final_forest_fit$.predictions)[, -16]\n\n# Compute a confusion matrix\ncm_forest <- forest_test_rs %>% yardstick::conf_mat(truth = IsOfConcern, estimate = .pred_class) \n\n# Create the confusion matrix heatmap plot\nautoplot(cm_forest, type = \"heatmap\") +\n  custom_palette +  # Apply the custom color palette\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Confusion matrix of random forest predictions on test data\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate rates from the confusion matrix\nTP_forest <- cm_forest$table[2, 2]\nFP_forest <- cm_forest$table[2, 1]\nTN_forest <- cm_forest$table[1, 1]\nFN_forest <- cm_forest$table[1, 2]\nTPR_forest <- TP_forest / (TP_forest + FN_forest)  # True Positive Rate\nFPR_forest <- FP_forest / (FP_forest + TN_forest)  # False Positive Rate\nTNR_forest <- TN_forest / (TN_forest + FP_forest)  # True Negative Rate\nFNR_forest <- FN_forest / (TP_forest + FN_forest)  # False Negative Rate\n\n# Add rates to cm df\nforest_cm_vec <- c(TPR_forest, FPR_forest, TNR_forest, FNR_forest)\ncm_df$RandomForest <- forest_cm_vec\n```\n:::\n\n\nThe accuracy of the forest was 0.943. This is again similar to other models. This model had an auc of 0.824.\n\n### Boosting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Tune learning rate first\n# Set up specs for learning rate tuning\nlr_spec <- parsnip::boost_tree(mode = \"classification\",\n                                engine = \"xgboost\",\n                                trees = 3000,\n                                learn_rate = tune())\n\n# Set up tuning grid\nlr_grid <- expand.grid(learn_rate = seq(0.0001, 0.5, length.out = 50))\n\n# Set up workflow\nwf_lr_tune <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(lr_spec)\n\ndoParallel::registerDoParallel()\nset.seed(123)\n\n# Tune\nlr_rs <- tune_grid(\n  wf_lr_tune,\n  IsOfConcern~.,\n  resamples = fish_cv,\n  grid = lr_grid\n)\n\n# Use autoplot() to examine how different parameter configurations relate to accuracy \nautoplot(lr_rs) +   \n  theme_light() +\n  labs(\n    x = \"Learning rate\",\n    title = \"Results from learning rate tuning\"\n  ) +\n  theme(\n    legend.position = \"none\",\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  facet_wrap(\n    ~.metric,\n    nrow = 2,\n    labeller = labeller(.metric = c(\"accuracy\" = \"Accuracy\", \"roc_auc\" = \"Area under ROC curve\"))\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Identify best values from the tuning process\nlr_rs %>%\n  tune::show_best(metric = \"roc_auc\") %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the learning rate parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the learning rate parameter values.\n\n| learn_rate|.metric |.estimator |      mean|  n|   std_err|.config               |\n|----------:|:-------|:----------|---------:|--:|---------:|:---------------------|\n|  0.0103020|roc_auc |binary     | 0.8697860| 10| 0.0125356|Preprocessor1_Model02 |\n|  0.0307061|roc_auc |binary     | 0.8587251| 10| 0.0141796|Preprocessor1_Model04 |\n|  0.0205041|roc_auc |binary     | 0.8584129| 10| 0.0126799|Preprocessor1_Model03 |\n|  0.0511102|roc_auc |binary     | 0.8574748| 10| 0.0135668|Preprocessor1_Model06 |\n|  0.0409082|roc_auc |binary     | 0.8572797| 10| 0.0133747|Preprocessor1_Model05 |\n:::\n\n```{.r .cell-code}\n# Select best lr hyperparametes\nbest_learn <- lr_rs %>%\n  tune::select_best(\"roc_auc\")\n\n# Tune tree parameters next\n# Create a new specification where setting the learning rate and tune the tree parameters\nboost_tree_spec <- parsnip::boost_tree(mode = \"classification\",\n                                engine = \"xgboost\",\n                                trees = 3000,\n                                learn_rate = best_learn$learn_rate,\n                                min_n = tune(),\n                                tree_depth = tune(),\n                                loss_reduction = tune()\n                                )\n\n# Define parameters to be tuned\nboost_params <- dials::parameters(\n  min_n(),\n  tree_depth(),\n  loss_reduction()\n)\n\n# Set up a tuning grid using grid_max_entropy() to get a representative sampling of the parameter space.\nboost_tree_grid <- dials::grid_max_entropy(boost_params, size = 50)\n\n# Set up workflow\nwf_boost_tree_tune <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(boost_tree_spec)\n\nset.seed(123)\ndoParallel::registerDoParallel()\n\n# Tune\nboost_tree_rs <- tune_grid(\n  wf_boost_tree_tune,\n  IsOfConcern~.,\n  resamples = fish_cv,\n  grid = boost_tree_grid\n)\n\n# Identify best values from the tuning process\nboost_tree_rs %>%\n  tune::show_best(metric = \"roc_auc\") %>% \n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the tree parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the tree parameter values.\n\n| min_n| tree_depth| loss_reduction|.metric |.estimator |      mean|  n|   std_err|.config               |\n|-----:|----------:|--------------:|:-------|:----------|---------:|--:|---------:|:---------------------|\n|     5|         13|      1.4059617|roc_auc |binary     | 0.8826142| 10| 0.0139348|Preprocessor1_Model11 |\n|     5|          6|      0.5640640|roc_auc |binary     | 0.8751618| 10| 0.0139514|Preprocessor1_Model25 |\n|    10|          3|      0.0000086|roc_auc |binary     | 0.8744951| 10| 0.0127641|Preprocessor1_Model34 |\n|    11|          3|      0.0000000|roc_auc |binary     | 0.8741408| 10| 0.0133400|Preprocessor1_Model21 |\n|    15|          8|      0.0000000|roc_auc |binary     | 0.8734961| 10| 0.0128297|Preprocessor1_Model50 |\n:::\n\n```{.r .cell-code}\n# Select best tree hyperparameters\nboost_best_trees <- boost_tree_rs %>%\n  tune::select_best(\"roc_auc\")\n\n# Tune Stochastic Parameters\n# Create another new specification where setting the learning rate and tree parameters and tune the stochastic parameters.\nboost_stoc_spec <- parsnip::boost_tree(mode = \"classification\",\n                                engine = \"xgboost\",\n                                trees = 3000,\n                                learn_rate = best_learn$learn_rate,\n                                min_n = boost_best_trees$min_n,\n                                tree_depth = boost_best_trees$tree_depth,\n                                mtry = tune(),                   \n                                loss_reduction = boost_best_trees$loss_reduction,\n                                sample_size = tune(),\n                                stop_iter = tune()\n                                )\n\n# Set up a tuning grid using grid_max_entropy() again.\n# Define parameters to be tuned\nboost_stoc_params <- dials::parameters(\n  finalize(mtry(),\n           select(fish_baked_train,-IsOfConcern)),\n  sample_size = sample_prop(c(.4, .9)),\n  stop_iter())\n\n# Set up grid\nboost_stoc_grid <- dials::grid_max_entropy(boost_stoc_params, size = 50)\n\n# Set up workflow\nwf_boost_stoc <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(boost_stoc_spec)\n\nset.seed(123)\ndoParallel::registerDoParallel()\n\n# Tune\nboost_stoc_rs <- tune_grid(\n  wf_boost_stoc,\n  IsOfConcern~.,\n  resamples = fish_cv,\n  grid = boost_stoc_grid\n)\n\n# Identify best values from the tuning process\nboost_stoc_rs %>%\n  tune::show_best(metric = \"roc_auc\") %>%\n  slice_head(n = 5) %>% \n  kable(caption = \"Performance of the best models and the associated estimates for the stochastic parameter values.\")\n```\n\n::: {.cell-output-display}\nTable: Performance of the best models and the associated estimates for the stochastic parameter values.\n\n| mtry| sample_size| stop_iter|.metric |.estimator |      mean|  n|   std_err|.config               |\n|----:|-----------:|---------:|:-------|:----------|---------:|--:|---------:|:---------------------|\n|    8|   0.7172139|         6|roc_auc |binary     | 0.8839072| 10| 0.0144816|Preprocessor1_Model36 |\n|    6|   0.7955117|        11|roc_auc |binary     | 0.8838613| 10| 0.0143617|Preprocessor1_Model14 |\n|    4|   0.8387867|        18|roc_auc |binary     | 0.8826144| 10| 0.0145272|Preprocessor1_Model11 |\n|   12|   0.8546558|         8|roc_auc |binary     | 0.8821623| 10| 0.0136444|Preprocessor1_Model22 |\n|    7|   0.6991360|        10|roc_auc |binary     | 0.8820257| 10| 0.0143307|Preprocessor1_Model46 |\n:::\n\n```{.r .cell-code}\n# Select best hyperparameters from tuning\nboost_best_stoch <- boost_stoc_rs %>%\n  tune::select_best(\"roc_auc\")\n\n# Finalize workflow\n# Assemble final workflow with all of the optimized parameters and do a final fit.\nboost_final_spec <- parsnip::boost_tree(mode = \"classification\",\n                                engine = \"xgboost\",\n                                trees = 1000,\n                                learn_rate = best_learn$learn_rate,\n                                min_n = boost_best_trees$min_n,\n                                tree_depth = boost_best_trees$tree_depth,\n                                mtry = boost_best_stoch$mtry,                   \n                                loss_reduction = boost_best_trees$loss_reduction,\n                                stop_iter = boost_best_stoch$stop_iter,\n                                sample_size = boost_best_stoch$sample_size\n                                )\n\n# Set up workflow\nwf_boost_final <- workflow() %>% \n  add_recipe(fish_recipe) %>% \n  add_model(boost_final_spec)\n\n# Fit to just training data (need for later)\nfinal_simple_fit <- wf_boost_final %>%\n  fit(data = fish_train)\n\n# Final fit\nfinal_boost_fit <- last_fit(boost_final_spec, IsOfConcern~., fish_split)\n\n# Store accuracy and auc metrics\ntibble_boost <- final_boost_fit %>% collect_metrics()\ntibble_boost %>% \n  kable(caption = \"Accuracy and area under ther receiver operator curve of the final fit.\")\n```\n\n::: {.cell-output-display}\nTable: Accuracy and area under ther receiver operator curve of the final fit.\n\n|.metric  |.estimator | .estimate|.config              |\n|:--------|:----------|---------:|:--------------------|\n|accuracy |binary     | 0.9438669|Preprocessor1_Model1 |\n|roc_auc  |binary     | 0.8593097|Preprocessor1_Model1 |\n:::\n\n```{.r .cell-code}\nfinal_boost_accuracy <- tibble_boost %>%\n  filter(.metric == \"accuracy\") %>%\n  pull(.estimate)\n\nfinal_boost_auc <- tibble_boost %>%\n  filter(.metric == \"roc_auc\") %>%\n  pull(.estimate)\n\n# Bind predictions and original data\nboost_test_rs <- cbind(fish_test, final_boost_fit$.predictions)[, -16]\n\n# Compute a confusion matrix\ncm_boost <- boost_test_rs %>% yardstick::conf_mat(truth = IsOfConcern, estimate = .pred_class) \n\n# Create the confusion matrix heatmap plot\nautoplot(cm_boost, type = \"heatmap\") +\n  custom_palette +  # Apply the custom color palette\n  theme(\n    axis.text.x = element_text(size = 12),\n    axis.text.y = element_text(size = 12),\n    axis.title = element_text(size = 14),\n    panel.background = element_blank(),\n    plot.background = element_blank()\n  ) +\n  labs(title = \"Confusion matrix of random boosted predictions on test data\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Calculate rates from the confusion matrix\nTP_boost <- cm_boost$table[2, 2]\nFP_boost <- cm_boost$table[2, 1]\nTN_boost <- cm_boost$table[1, 1]\nFN_boost <- cm_boost$table[1, 2]\nTPR_boost <- TP_boost / (TP_boost + FN_boost)  # True Positive Rate\nFPR_boost <- FP_boost / (FP_boost + TN_boost)  # False Positive Rate\nTNR_boost <- TN_boost / (TN_boost + FP_boost)  # True Negative Rate\nFNR_boost <- FN_boost / (TP_boost + FN_boost)  # False Negative Rate\n\n# Add rates to cm df\nboost_cm_vec <- c(TPR_boost, FPR_boost, TNR_boost, FNR_boost)\ncm_df$Boosting <- boost_cm_vec\n```\n:::\n\n\nThe accuracy of the boosting was 0.944. This is also similar to other models. This model had an auc of 0.859, which is the best of all models by a small margin.\n\n## Model Results\n\n### Model selection\n\nI want to compare accuracy and area under the curve of all models created. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Name models in vec\nmodels <- c(\"Dummy\", \"Lasso\", \"KNN\", \"Decision Tree\", \"Bagging\", \"Random Forest\", \"Boosting\")\n\n# Create accuracy vec\naccuracy <- c(dummy, final_lasso_accuracy, final_knn_accuracy, final_tree_accuracy, final_bag_accuracy, final_forest_accuracy, final_boost_accuracy)\n\n# Make df\naccuracy_df <- data.frame(models, accuracy)\n\n# Create a factor with the desired order for models\naccuracy_df$models <- factor(accuracy_df$models, levels = c(\"Dummy\", \"Lasso\", \"KNN\", \"Decision Tree\", \"Bagging\", \"Random Forest\", \"Boosting\"))\n\n# Create the plot\nggplot(accuracy_df, aes(x = models, y = accuracy)) +\n  geom_col(fill = \"#4a6c75\") +\n  theme_minimal() +\n  labs(title = \"Accuracy was similar across all models\",\n    x = \"Model\",        \n    y = \"Accuracy\") +\n  geom_text(aes(label = round(accuracy, 3)), vjust = -0.5) +\n  theme(plot.background = element_blank(),\n        panel.background = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Create auc vec\nauc <- c(final_lasso_auc, final_knn_auc, final_tree_auc, final_bag_auc, final_forest_auc, final_boost_auc)\n\n# Make df\nauc_df <- data.frame(models[-1], auc)\n\n# Create a factor with the desired order for models\nauc_df$models <- factor(auc_df$models, levels = c(\"Lasso\", \"KNN\", \"Decision Tree\", \"Bagging\", \"Random Forest\", \"Boosting\"))\n\nggplot(auc_df, aes(x = models, y = auc)) +\n  geom_col(fill = \"#4a6c75\") +\n  theme_minimal() +\n  labs(title = \"Boosting was the highest performing model\",\n    x = NULL,        \n    y = \"Area under ROC curve\") +\n    geom_text(aes(label = round(auc, 3)), vjust = -0.5) +\n  theme(plot.background = element_blank(),\n        panel.background = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-2.png){width=672}\n:::\n:::\n\n\nBecause the dataset is very imbalanced with the proportion of threatened species being small, the accuracies between models don't vary much. It is difficult to get much more accurate than always choosing not threatened (the dummy classifier) because that already has an accuracy of 0.94. All models performed better than the dummy classifier though, so that is encouraging. Looking at AUC we see that boosting decision trees was the most successful of the models when applied to the testing data. \n\nI also want to compare the confusion matrix values of each model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print table\ncm_df %>% \n  kable()\n```\n\n::: {.cell-output-display}\n|Metric              |     Lasso|       KNN| DecisionTree|   Bagging| RandomForest|  Boosting|\n|:-------------------|---------:|---------:|------------:|---------:|------------:|---------:|\n|True positive rate  | 0.1826087| 0.0086957|    0.3217391| 0.2521739|    0.2434783| 0.2521739|\n|False positive rate | 0.0082919| 0.0000000|    0.0165837| 0.0121614|    0.0121614| 0.0121614|\n|True negative rate  | 0.9917081| 1.0000000|    0.9834163| 0.9878386|    0.9878386| 0.9878386|\n|False negative rate | 0.8173913| 0.9913043|    0.6782609| 0.7478261|    0.7565217| 0.7478261|\n:::\n\n```{.r .cell-code}\n# Create a named vector with colors for each Metric\ncolor_palette <- c(\"True positive rate\" = \"#8ae68d\",\n                   \"False positive rate\" = \"#F3A6DE\",\n                   \"True negative rate\" = \"#1b4a1c\",\n                   \"False negative rate\" = \"#B3297A\")\n\n# Plot the true pos etc rates\ncm_df %>% \n  pivot_longer(cols = Lasso:Boosting) %>% \n  ggplot(aes(x = name, y = value, fill = Metric)) +\n  geom_col() +\n  theme_minimal() +\n  labs(x = NULL,\n       y = \"Value\",\n       title = \"Rates of true positive, true negative, etc. for each model\")  +\n  theme(plot.background = element_blank(),\n        panel.background = element_blank()) +\n  scale_fill_manual(values = color_palette)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nThe decision tree had the highest true positive rate of all the models and the lowest false negative rate. However, the decision tree also had the largest false positive rate (although all false positive rates were generally small). False positives in the context of investigating fish populations could cause a misuse of resources. The true negative rate is comparable across all models. Based on these metrics and the AUC, either boosting or a decision tree appear to be good options. Because I want to minimize false positive outcomes, I will proceed with the boosted model for predictions.\n\n### Variable Importance\n\nI want to look at the variable importance of the most successful model, the boosting.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Variable importance\nvar_imp_boost <- wf_boost_final %>% \n  fit(fish_train) %>% \n  pull_workflow_fit() %>%\n  vi() %>%\n  mutate(\n    Importance = abs(Importance),\n    Variable = fct_reorder(Variable, Importance))\nvar_imp_boost %>% \n  ggplot(aes(x = Importance, y = Variable)) +\n  geom_col(fill = \"#57ba72\") +\n  theme_minimal() +\n  scale_x_continuous(expand = c(0, 0)) +\n  labs(y = \"Feature\",\n       x = \"Importance\",\n       title = \"Feature importance of boosting model\") +\n  theme(plot.background = element_blank(),\n        panel.background = element_blank())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nIt looks like length, other body shape, depth range (deep), and having no special electrogenic ability, are driving the model the most. \n\n## Prediction Results\n\nI want to use the boosted model to predict Threatened/Nontreatened of species that are listed as 'Data Deficient' or NA on the IUCN Red List. I read in the species that are not categorized and apply the same preparation steps on them. I then apply the model to the new data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n# Read in data for predictions\nprediction_dat <- read_csv(\"/Users/elkewindschitl/Documents/data-sci/predict_data.csv\")\n\n# Remove columns not used above\npredict_short <- prediction_dat %>% \n  select(all_of(columns_meeting_threshold[1:13]))\n\n# Convert the specified character columns to factors\npredict_fac <- predict_short %>%\n  mutate(across(all_of(character_columns_to_convert), as.factor))\n\npredict_fac$Index <- 1:nrow(predict_fac)\n\n# If feature is a factor DON'T order, remove identifying columns\npredict_fac <- predict_fac %>% \n  mutate_if(is.ordered, .funs = factor, ordered = F)\npredict_features <- predict_fac %>% \n  select(-GenusSpecies) %>% \n  select(-SpecCode) %>% \n  select(-MainCommonName)\n\n# Remove rows with any remaining missing values\npredict_features_no_na <- na.omit(predict_features)\n\n# Remove index column\npredict_no_index <- predict_features_no_na[-11]\n\n# Apply the model\npredictions <- final_simple_fit %>% predict(new_data = predict_no_index)\n\n# Pull name columns\nspecies_names_p <- predict_fac %>%\n  select(GenusSpecies, MainCommonName, Index)\n\n# Bind to data and join w names\npredicted_df <- cbind(predict_features_no_na, predictions) %>% \n  left_join(y = species_names_p, \n            by = join_by(Index))\n\n# Isolate threatened species\npredicted_threatened <- predicted_df %>% \n  filter(.pred_class == 1) %>% \n  select(GenusSpecies, MainCommonName)\n\n# Display threatened species\npredicted_threatened %>% \n  kable(col.names = c(\"Genus Species\", \"Main Common Name\"),\n        caption = \"Data deficient species predicted to be threated.\")\n```\n\n::: {.cell-output-display}\nTable: Data deficient species predicted to be threated.\n\n|Genus Species            |Main Common Name         |\n|:------------------------|:------------------------|\n|Makaira mazara           |NA                       |\n|Cephaloscyllium isabella |NA                       |\n|Carcharhinus perezii     |NA                       |\n|Raja texana              |NA                       |\n|Hippocampus guttulatus   |Long-snouted Seahorse    |\n|Anarhichas lupus         |NA                       |\n|Pristis microdon         |NA                       |\n|Zapteryx exasperata      |Banded Guitarfish        |\n|Myliobatis californica   |NA                       |\n|Mobula japanica          |NA                       |\n|Anarhichas orientalis    |NA                       |\n|Epinephelus lanceolatus  |Giant Grouper            |\n|Dasyatis brevis          |NA                       |\n|Raja cervigoni           |NA                       |\n|Rhina ancylostomus       |NA                       |\n|Raja herwigi             |Cape Verde Skate         |\n|Raja rouxi               |NA                       |\n|Dasyatis tortonesei      |Tortonese's Stingray     |\n|Pseudobatos glaucostigma |NA                       |\n|Echinophryne crassispina |NA                       |\n|Hemitrygon bennettii     |NA                       |\n|Rhinobatos formosensis   |NA                       |\n|Acroteriobatus ocellatus |Speckled Guitarfish      |\n|Hippocampus coronatus    |High-crowned Seahorse    |\n|Lophius litulon          |Yellow Goosefish         |\n|Echinophryne reynoldsi   |NA                       |\n|Mobula eregoodootenkee   |NA                       |\n|Dipturus trachyderma     |NA                       |\n|Tetronarce semipelagica  |NA                       |\n|Hippocampus colemani     |Coleman's Pygmy Seahorse |\n|Squatina punctata        |NA                       |\n:::\n:::\n\n\nOf the 3560 data deficient species with complete feature information, my model returned 31 species that are likely threatened.\n\n## Conclusions \n\nMachine learning algorithms can be a helpful tool for classifying data that may otherwise be missing. Here, I predicted which data deficient IUCN Red List saltwater fish species might be threatened based on a set of their ecological and morphological characteristics. However, it is important to note there are limitations to my approach here. Because some of the algorithms I used are sensitive to missing data values in the features, I only worked with species that had complete data. Elusive fish may not be represented in FishBase and therefore might not be represented in my model. I also cannot apply the model to fish that are lacking data on both the Red List and Fishbase. Also, these data were very imbalanced. A continuation of this analysis might play with techniques that help address imbalanced data.\n\n## References\n\n^1^ “IUCN,” IUCN Red List of Threatened Species. Version 2022-1, 2022. https://www.iucnredlist.org/ (accessed Dec. 02, 2022).\n\n^2^ B. J. Cardinale et al., “Biodiversity loss and its impact on humanity,” Nature, vol. 486, no. 7401, Art. no. 7401, Jun. 2012, doi: 10.1038/nature11148. \n\n^3^ “IUCN,” IUCN Red List of Threatened Species. Version 2022-1, 2015. www.iucnredlist.org\n\n^4^ M. J. Munstermann et al., “A global ecological signal of extinction risk in terrestrial vertebrates,” Conserv. Biol., vol. 36, no. 3, p. e13852, 2022, doi: 10.1111/cobi.13852.\n\n^5^ R. Froese and D. Pauly, “FishBase,” 2022. www.fishbase.org\n\n^6^ C. Boettiger, D. Temple Lang, and P. Wainwright, “rfishbase: exploring, manipulating and visualizing FishBase data from R.,” J. Fish Biol., 2012, doi: https://doi.org/10.1111/j.1095-8649.2012.03464.x.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}